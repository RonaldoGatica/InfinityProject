@page "/register"
@inject IAuthService AuthService

<PageTitle>Register</PageTitle>

<h3>Register</h3>

<EditForm Model="user" OnValidSubmit="HandleRegistration">
    <DataAnnotationsValidator />
    <div class="mb-3">
        <label for="usuario">Nombre completo</label>
        <InputText id="Nombre" @bind-Value="user.Nombre" class="form-control" />
        <ValidationMessage For="@(() => user.Nombre)" />
    </div>

    <div class="mb-3">
        <label for="usuario">Usuario</label>
        <InputText id="usuario" @bind-Value="user.Usuario" class="form-control" />
        <ValidationMessage For="@(() => user.Usuario)" />
    </div>

    <div class="mb-3">
        <label for="usuario">Correo</label>
        <InputText id="Correo" @bind-Value="user.Email" class="form-control" type="email" />
        <ValidationMessage For="@(() => user.Email)" />
    </div>


    <div class="mb-3">
        <label for="password">Contraseña</label>
        <InputText id="password" @bind-Value="user.Password" class="form-control" type="password" />
        <ValidationMessage For="@(() => user.Password)" />
    </div>

    <div class="mb-3">
        <label for="confirmPassword">Confirmar Contraseña</label>
        <InputText id="confirmPassword" @bind-Value="user.ConfirmPassword" class="form-control" type="password" />
        <ValidationMessage For="@(() => user.ConfirmPassword)" />
    </div>

    <button type="submit" class="btn-primary">Registrarse</button>
    <div class=@messageCssClass>
        <span>@message</span>
    </div>
</EditForm>
@code {
    UserCredentials user = new UserCredentials();
    string message = string.Empty;
    string messageCssClass = string.Empty;

    async Task HandleRegistration()
    {
        var result = await AuthService.Register(user);
        message = result.Message;
        if (result.Success)
            messageCssClass = "text-success";
        else
            messageCssClass = "text-danger";
    }
}