@page "/"
@using ClassLibraryInfinity.Entities
@using Infinity.UI.Shared.Modals
@implements IDisposable

@inject ILocalStorageService LocalStorage
@inject IPublicationService PublicationService
@inject NavigationManager NavigationManager

<AuthorizeView>
    <Authorized>
        <section class="py-8">
            <div class="container">
                <div class="p-6 bg-white rounded shadow">
                    <div class="d-flex mb-4 align-items-start justify-content-between">
                        <div class="d-flex align-items-center">
                            <img class="me-4 img-fluid rounded-circle img-thumbnail" src="https://images.unsplash.com/photo-1559893088-c0787ebfc084?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;ixlib=rb-1.2.1&amp;auto=format&amp;fit=crop&amp;w=1050&amp;q=80" alt="" style="width: 72px; height: 72px; object-fit: cover;">

                            <div>
                                <div class="d-flex mb-2 align-items-center">
                                    <h3 class="h6">@name</h3>
                                </div>
                            </div>
                        </div>
                        <button class="btn p-0 text-secondary">
                            <svg viewBox="0 0 12 4" fill="none" xmlns="http://www.w3.org/2000/svg" style="width: 12px;height: 12px">
                                <path d="M6 0.666687C5.26667 0.666687 4.66667 1.26669 4.66667 2.00002C4.66667 2.73335 5.26667 3.33335 6 3.33335C6.73333 3.33335 7.33333 2.73335 7.33333 2.00002C7.33333 1.26669 6.73333 0.666687 6 0.666687ZM1.33333 0.666687C0.6 0.666687 0 1.26669 0 2.00002C0 2.73335 0.6 3.33335 1.33333 3.33335C2.06667 3.33335 2.66667 2.73335 2.66667 2.00002C2.66667 1.26669 2.06667 0.666687 1.33333 0.666687ZM10.6667 0.666687C9.93333 0.666687 9.33333 1.26669 9.33333 2.00002C9.33333 2.73335 9.93333 3.33335 10.6667 3.33335C11.4 3.33335 12 2.73335 12 2.00002C12 1.26669 11.4 0.666687 10.6667 0.666687Z" fill="currentColor"></path>
                            </svg>
                        </button>
                    </div>
                    <div class="mb-5">
                        <p class="mb-8 small">
                            <input class="form-control" type="text" placeholder="Crear un post" readonly @onclick="Show">
                        </p>
                    </div>

                </div>
            </div>
        </section>
    </Authorized>
    <NotAuthorized>
    </NotAuthorized>
</AuthorizeView>

@foreach (var publicacion in publicaciones)
{
    <section class="py-8">
        <div class="container">
            <div class="p-6 bg-white rounded shadow">
                <div class="d-flex mb-4 align-items-start justify-content-between">
                    <div class="d-flex align-items-center">
                        <img class="me-4 img-fluid rounded-circle img-thumbnail" src="https://images.unsplash.com/photo-1559893088-c0787ebfc084?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;ixlib=rb-1.2.1&amp;auto=format&amp;fit=crop&amp;w=1050&amp;q=80" alt="" style="width: 72px; height: 72px; object-fit: cover;">
                        <div>
                            <div class="d-flex mb-2 align-items-center">

                                <h3 class="h6">@publicacion.Nickname</h3>
                            </div>
                            <p class="mb-0 small text-secondary" contenteditable="false">@publicacion.Date</p>
                        </div>
                    </div>
                    @if (user!=null && user.Nickname == publicacion.Nickname)
                    {
                        <div class="dropdown">
                            <button class="btn p-0 text-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                <svg viewBox="0 0 12 4" fill="none" xmlns="http://www.w3.org/2000/svg" style="width: 12px;height: 12px">
                                    <path d="M6 0.666687C5.26667 0.666687 4.66667 1.26669 4.66667 2.00002C4.66667 2.73335 5.26667 3.33335 6 3.33335C6.73333 3.33335 7.33333 2.73335 7.33333 2.00002C7.33333 1.26669 6.73333 0.666687 6 0.666687ZM1.33333 0.666687C0.6 0.666687 0 1.26669 0 2.00002C0 2.73335 0.6 3.33335 1.33333 3.33335C2.06667 3.33335 2.66667 2.73335 2.66667 2.00002C2.66667 1.26669 2.06667 0.666687 1.33333 0.666687ZM10.6667 0.666687C9.93333 0.666687 9.33333 1.26669 9.33333 2.00002C9.33333 2.73335 9.93333 3.33335 10.6667 3.33335C11.4 3.33335 12 2.73335 12 2.00002C12 1.26669 11.4 0.666687 10.6667 0.666687Z" fill="currentColor"></path>
                                </svg>
                            </button>
                            <ul class="dropdown-menu">
                                <li><a class="dropdown-item" @onclick="() => deletePost(publicacion.IdPublication)">Eliminar post</a></li>
                                <li><a class="dropdown-item" > - </a></li>
                                <li><a class="dropdown-item" > - </a></li>
                            </ul>
                        </div>
                    }

                </div>
                <div class="mb-5">
                    <p class="fw-bold">@publicacion.Title</p>
                    <p class="mb-8 small">@publicacion.Body</p>
                </div>
                <p class="mb-8 small">
                    <input class="form-control" type="text" placeholder="Escribe un comentario" readonly="" @onclick="() => ShowPublicationModal(publicacion.IdPublication)">
                </p>
            </div>
        </div>
    </section>
}

<NewPostModal @ref="myModal"></NewPostModal>

<PublicationModal @ref="myPublicationModal"></PublicationModal>

@code {
    //[Inject]
    public NewPostModal myModal { get; set; }

    public PublicationModal myPublicationModal { get; set; }

    private void Show()
    {
        // Mostrar el modal
        myModal.ShowModal();
        StateHasChanged();
    }

    private void ShowPublicationModal(int ID_PUBLICATION)
    {
        // Mostrar el modal
        myPublicationModal.ShowModal(ID_PUBLICATION);
        StateHasChanged();
    }


    private List<Publication> publicaciones = new List<Publication>();
    string name;
    Userweb user = null;
    protected async override void OnInitialized()
    {
        user = await LocalStorage.GetItemAsync<Userweb>("user");
        name = user.Nickname;
        publicaciones = await PublicationService.GetPublications();
        StateHasChanged();
    }
    public async void deletePost(int id)
    {
        await PublicationService.delete(id);
        await InvokeAsync(StateHasChanged);
        NavigationManager.NavigateTo("/", true);
    }
    private IDisposable suscriptor;
    public void Dispose()
    {
        suscriptor.Dispose();
    }
}
